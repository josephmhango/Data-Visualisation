bird_counts <- matrix(c(
30, 20,  # Glen Affric
25, 25,  # Glen Nevis
15, 35   # Rannoch Moor
), ncol = 2, byrow = TRUE)
rownames(bird_counts) <- c("Glen Affric", "Glen Nevis", "Rannoch Moor")
colnames(bird_counts) <- c("Golden Eagle", "Red Kite")
bird_counts
row_totals <- rowSums(bird_counts)
col_totals <- colSums(bird_counts)
total <- sum(bird_counts)
expected <- outer(row_totals, col_totals) / total
expected
chisq_contrib <- (bird_counts - expected)^2 / expected
round(chisq_contrib, 2)  # Show individual contributions
chisq_manual <- sum(chisq_contrib)
chisq_manual  # Final chi-square value
chisq.test(bird_counts)
observed <- c(Golden_Eagle = 30, Red_Kite = 20)
observed
chisq.test(x = observed, p = c(0.6, 0.4))
expected <- c(0.6, 0.4) * sum(observed)  # 60% and 40% of 50
expected
chisq.test(x = observed, p = c(0.6, 0.4))
chisq.test(x = observed, p = c(0.9, 0.1))
chisq.test(x = observed, p = c(0.6, 0.4))
library(ggplot2)
library(tibble)
library(dplyr)
x <- seq(-4, 4, length.out = 500)
t_dfs <- c(2, 5, 10, 30)
df_plot <- tibble(
x = rep(x, length(t_dfs) + 1),
density = c(dnorm(x), dt(x, df = 2), dt(x, df = 5), dt(x, df = 10), dt(x, df = 30)),
dist = factor(rep(c("Normal", paste0("t (df = ", t_dfs, ")")), each = length(x)))
)
library(ggplot2)
library(tibble)
library(dplyr)
set.seed(123)
# Grid of x values
x_vals <- seq(-4, 4, length.out = 2500)
# Compute densities with matching lengths
df <- tibble(
x = x_vals,
normal = dnorm(x_vals),
t_df5  = dt(x_vals, df = 5),
t_df30 = dt(x_vals, df = 30)
)
df_long <- df %>%
pivot_longer(cols = c(normal, t_df5, t_df30),
names_to = "distribution",
values_to = "density")
library(ggplot2)
library(dplyr)
library(tibble)
set.seed(123)
# Grid of x values
x_vals <- seq(-4, 4, length.out = 2500)
# Compute densities with matching lengths
df <- tibble(
x = x_vals,
normal = dnorm(x_vals),
t_df5  = dt(x_vals, df = 5),
t_df30 = dt(x_vals, df = 30)
)
df_long <- df %>%
pivot_longer(cols = c(normal, t_df5, t_df30),
names_to = "distribution",
values_to = "density")
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
set.seed(123)
# Grid of x values
x_vals <- seq(-4, 4, length.out = 2500)
# Compute densities with matching lengths
df <- tibble(
x = x_vals,
normal = dnorm(x_vals),
t_df5  = dt(x_vals, df = 5),
t_df30 = dt(x_vals, df = 30)
)
df_long <- df %>%
pivot_longer(cols = c(normal, t_df5, t_df30),
names_to = "distribution",
values_to = "density")
ggplot(df_long, aes(x = x, y = density, colour = distribution)) +
geom_line(size = 1) +
labs(
title = "Normal vs t-distribution",
subtitle = "Note how smaller df has heavier tails",
x = "Value",
y = "Density"
) +
theme_minimal(base_size = 14)
x <- seq(-4, 4, length.out = 500)
y <- dt(x, df = 20)  # example df
alpha <- 0.05
crit <- qt(1 - alpha / 2, df = 20)
ggplot(data.frame(x, y), aes(x, y)) +
geom_line(color = "steelblue", size = 1.2) +
# Left rejection region
geom_rect(aes(xmin = -Inf, xmax = -crit, ymin = 0, ymax = Inf),
fill = "red", alpha = 0.2, inherit.aes = FALSE) +
# Right rejection region
geom_rect(aes(xmin = crit, xmax = Inf, ymin = 0, ymax = Inf),
fill = "red", alpha = 0.2, inherit.aes = FALSE) +
geom_vline(xintercept = c(-crit, crit), linetype = "dashed", color = "red") +
labs(title = "t-Distribution with Rejection Region",
subtitle = "Two-tailed test, alpha = 0.05",
x = "t-statistic",
y = "Density") +
theme_minimal()
library(ggplot2)
# parameters
df <- 20      # degrees of freedom
alpha <- 0.05
# generate t-distribution curve
x <- seq(-4, 4, length.out = 500)
y <- dt(x, df = df)
df_curve <- data.frame(x, y)
# critical value (two-tailed)
crit <- qt(1 - alpha / 2, df = df)
ggplot(df_curve, aes(x, y)) +
geom_line(color = "steelblue", size = 1.2) +
# Shade left tail
geom_area(data = subset(df_curve, x < -crit),
aes(x, y), fill = "red", alpha = 0.4) +
# Shade right tail
geom_area(data = subset(df_curve, x > crit),
aes(x, y), fill = "red", alpha = 0.4) +
# Critical value lines
geom_vline(xintercept = c(-crit, crit),
linetype = "dashed", color = "red") +
labs(
title = "t-Distribution with Rejection Regions",
subtitle = paste0("Two-tailed test, Î± = ", alpha, ", df = ", df),
x = "t-statistic",
y = "Density"
) +
theme_minimal(base_size = 14)
# Group A yields
A <- c(20, 22, 19, 21)
B <- c(34, 35, 36, 34)
C <- c(27, 28, 29, 28)
var_A <- var(A)
var_B <- var(B)
var_C <- var(C)
MS_within <- mean(c(var_A, var_B, var_C))
mean_A <- mean(A)
mean_B <- mean(B)
mean_C <- mean(C)
grand_mean <- mean(c(A, B, C))
MS_between <- mean(c((mean_A - grand_mean)^2,
(mean_B - grand_mean)^2,
(mean_C - grand_mean)^2))
F_value <- MS_between / MS_within
# Combine into dataframe
values <- c(A, B, C)
groups <- factor(rep(c("A", "B", "C"), each = 4))
df <- data.frame(values, groups)
# Use aov to perform ANOVA
model <- aov(values ~ groups, data = df)
summary(model)
setwd('C:\\Users\\00760770\\Documents\\Level 5\\website')
quarto render
library(lme4)
setwd('C:\\Users\\00760770\\Documents\\GitHub\\professional-study-skills')
setwd('C:\\Users\\00760770\\Documents\\GitHub\\Data-visualisation')
pchisq(6269.8, df = 2, lower.tail = FALSE)
x<-pchisq(6269.8, df = 2, lower.tail = FALSE)
log(x)
x==0
x<-pchisq(6269.8, df = 2, lower.tail = FALSE, log.p = TRUE)
x
x<-pchisq(9423.636, df = 2, lower.tail = FALSE, log.p = TRUE)
x
pchisq(9423.636, df = 2, lower.tail = FALSE, log.p = TRUE)
pchisq(9423.636, df = 2, lower.tail = FALSE)
log(0)
